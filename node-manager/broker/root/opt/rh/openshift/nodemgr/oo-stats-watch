#!/usr/bin/env ruby
# For use with OpenShift Enterprise 1.0 and 1.1
#
# This is a simple script to monitor the usage of
# node hosts continuously using oo-stats.
#
# Installation: Place this script in the same directory
#   as the oo-stats script.
#
#--
# Copyright 2013 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#++
load 'oo-stats'
require 'optparse'
require 'ostruct'


options = OpenStruct.new
options.interval = 10

opts = OptionParser.new do |opts|
  opts.banner = "Usage: oo-stats-watch [options]"

  opts.on("-i", "--interval SECONDS", "Run check every N seconds") do |interval|
    options.interval = interval.to_i
  end
end
opts.parse!

o = OOStats.new(:wait => 1)
cols_for_node_table =
  %w{name gears_total_count gears_active_count max_active_gears gears_active_usage_pct
  }.map{|k| k.to_sym}
while true

  o.gather_statistics
  res = o.results

  # clear the screen
  puts "\033[2J\033[;H"

  missing_nodes = []
  res[:district_summaries].sort_by {|a| a[:profile] + a[:name] }.each do |district|
    missing_nodes += district[:missing_nodes]
    puts "Nodes for district '#{district[:name]}' with profile '#{district[:profile]}':"
    o.text_tableize district[:nodes].sort_by {|a| a[:name]}, cols_for_node_table
    puts "\n\n"
  end
  unless missing_nodes.empty?
    puts "\nWARNING: the following districted node(s) DID NOT respond:"
    puts missing_nodes.join ", "
    puts
  end

  sleep options.interval - 1
end
